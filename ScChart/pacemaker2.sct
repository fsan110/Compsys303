scchart pacemaker2 {
input signal Rst;
input signal Vs, As;
input signal VRPTO, AVITO, URITO, LRITO, PVARPTO, AEITO;
output signal Vp, Ap;
//V_timers
output signal VRP_start, URI_start, LRI_start, PVARP_start, AEI_start;
//A timers
output signal AVI_start;
output signal start_VTimers, start_ATimers;
output signal AVI_stop, AEI_stop;

	
	region main :
	
	
	initial state ControlUnit{
	  //Should be output
		
		
		region PVARP_FSM:
			 
	      		 initial state Loop{
	      		     initial state init
	      		     	--> PVARP_over with PVARPTO;
	      		     
	      		     state PVARP_over
	      		     	--> PVARP_over with As / start_ATimers;
	      		 }
	      		  
	      		 --> Loop with PVARP_start;
	    //@hide
	    region VRP_FSM:
	      		initial state init
	      		 	--> Loop with Vs / start_VTimers;
	      		  
	      		  
	      		 state Loop{
	      		     initial state init
	      		     	--> VRP_over with VRPTO;
	      		     
	      		     state VRP_over
	      		     	--> VRP_over with Vs / start_VTimers;
	      		 }
	      		  
	      		 --> Loop with VRP_start;
	    //@hide 			
	    region V_Timers:
		   initial state init
		   		--> startVTimers with start_VTimers / VRP_start; URI_start; LRI_start; AEI_start;PVARP_start;
		   		
		   		state startVTimers
		   		
		   		-->init immediate;
		   		
		region A_Timers:
	    
	    
		   initial state init
		   		--> startATimers with start_ATimers / AVI_start; AEI_stop;
		   		
		   		state startATimers
		   		--> init immediate;
		   		   		
	    region AVI_stop:
	    	initial state init
	    		--> startVTimers with start_VTimers / AVI_stop;
	    		
	    		
	    		state startVTimers
	    		-->init immediate;
		
		region VPace_FSM:		
			
			initial state beforeVsignal{
			  	region beforeV:
			  	
			  	initial state init
			  		o-> finish with start_VTimers
			  		--> finish with AVITO / Vp; start_VTimers;
			  		
			  	final state finish;
			}
			
			
		
			
			>-> afterVsignal;
			
			state afterVsignal{
			  
			  	region afterV:
				    initial state waitURI
				    	--> URI_over with URITO
				    	--> extendAVI with AVITO;
				    	
				    state URI_over
				    	o-> vSense with start_VTimers
				    	--> vPace  with (LRITO || AVITO) / Vp; start_VTimers;
				    	
	
				    
				    state extendAVI
				    	/*Might be used */
				    	// o-> vSense  with start_VTimers
				    	--> vPace with URITO / Vp;start_VTimers;
				    	
				    	
				    state vPace;
				    
				    state vSense;
			}
			
			--> afterVsignal with URI_start;

		region APace_FSM:
			
			initial state AEI{
			  	initial state init
			  		o-> finish with start_ATimers
			  		--> aPace with AEITO / start_ATimers;
			  		
			  	
			  		
			  	state finish;
			  	
			  	state aPace;
			}
			
			--> AEI with AEI_start;
		
	
	}
	
	o-> ControlUnit with Rst;
}
    
    
    
    
    
    
    
    
    
    
